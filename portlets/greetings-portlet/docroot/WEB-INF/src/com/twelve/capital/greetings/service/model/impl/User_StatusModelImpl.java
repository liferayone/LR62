/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.twelve.capital.greetings.service.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.twelve.capital.greetings.service.model.User_Status;
import com.twelve.capital.greetings.service.model.User_StatusModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the User_Status service. Represents a row in the &quot;greetings_User_Status&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.twelve.capital.greetings.service.model.User_StatusModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link User_StatusImpl}.
 * </p>
 *
 * @author neha.kakkar
 * @see User_StatusImpl
 * @see com.twelve.capital.greetings.service.model.User_Status
 * @see com.twelve.capital.greetings.service.model.User_StatusModel
 * @generated
 */
public class User_StatusModelImpl extends BaseModelImpl<User_Status>
	implements User_StatusModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a user_ status model instance should use the {@link com.twelve.capital.greetings.service.model.User_Status} interface instead.
	 */
	public static final String TABLE_NAME = "greetings_User_Status";
	public static final Object[][] TABLE_COLUMNS = {
			{ "UserId", Types.BIGINT },
			{ "StatusId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table greetings_User_Status (UserId LONG not null primary key,StatusId LONG)";
	public static final String TABLE_SQL_DROP = "drop table greetings_User_Status";
	public static final String ORDER_BY_JPQL = " ORDER BY user_Status.UserId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY greetings_User_Status.UserId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.twelve.capital.greetings.service.model.User_Status"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.twelve.capital.greetings.service.model.User_Status"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.twelve.capital.greetings.service.model.User_Status"));

	public User_StatusModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _UserId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setUserId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _UserId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return User_Status.class;
	}

	@Override
	public String getModelClassName() {
		return User_Status.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("UserId", getUserId());
		attributes.put("StatusId", getStatusId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long UserId = (Long)attributes.get("UserId");

		if (UserId != null) {
			setUserId(UserId);
		}

		Long StatusId = (Long)attributes.get("StatusId");

		if (StatusId != null) {
			setStatusId(StatusId);
		}
	}

	@Override
	public long getUserId() {
		return _UserId;
	}

	@Override
	public void setUserId(long UserId) {
		_UserId = UserId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _UserUuid);
	}

	@Override
	public void setUserUuid(String UserUuid) {
		_UserUuid = UserUuid;
	}

	@Override
	public long getStatusId() {
		return _StatusId;
	}

	@Override
	public void setStatusId(long StatusId) {
		_StatusId = StatusId;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			User_Status.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public User_Status toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (User_Status)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		User_StatusImpl user_StatusImpl = new User_StatusImpl();

		user_StatusImpl.setUserId(getUserId());
		user_StatusImpl.setStatusId(getStatusId());

		user_StatusImpl.resetOriginalValues();

		return user_StatusImpl;
	}

	@Override
	public int compareTo(User_Status user_Status) {
		long primaryKey = user_Status.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof User_Status)) {
			return false;
		}

		User_Status user_Status = (User_Status)obj;

		long primaryKey = user_Status.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<User_Status> toCacheModel() {
		User_StatusCacheModel user_StatusCacheModel = new User_StatusCacheModel();

		user_StatusCacheModel.UserId = getUserId();

		user_StatusCacheModel.StatusId = getStatusId();

		return user_StatusCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(5);

		sb.append("{UserId=");
		sb.append(getUserId());
		sb.append(", StatusId=");
		sb.append(getStatusId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(10);

		sb.append("<model><model-name>");
		sb.append("com.twelve.capital.greetings.service.model.User_Status");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>UserId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>StatusId</column-name><column-value><![CDATA[");
		sb.append(getStatusId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = User_Status.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			User_Status.class
		};
	private long _UserId;
	private String _UserUuid;
	private long _StatusId;
	private User_Status _escapedModel;
}